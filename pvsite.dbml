Project pvsite {
  database_type: 'PostgreSQL'

  Note: '''
    Datamodel for PV site-level data. To be surfaced via
    the to-be built nowcasting site-level API and frontend.
  '''
}

Table sites {
  site_uuid uuid [primary key, not null]
  client_uuid uuid [not null, note: 'The internal ID of the client providing the site data']
  client_site_id int4 [note: 'The ID of the site as given by the providing client']
  client_site_name varchar(255) [note: 'The ID of the site as given by the providing client']
  region varchar(255) [note: 'The region in the UK in which the site is located']
  dno varchar(255) [note: 'The Distribution Node Operator that owns the site']
  gsp varchar(255) [note: 'The Grid Supply Point in which the site is located']
  orientation real [note: 'The rotation of the panel in degrees. 180Â° points south']
  tilt real [note: 'The tile of the panel in degrees. 90Â° indicates the panel is vertical']
  latitude float8 [not null]
  longitude float8 [not null]
  capacity_kw real [not null, note: 'The physical limit on the production capacity of the site']
  created_utc timestamp [not null]
  updated_utc timestamp [not null]
  ml_id serial [note: 'Auto-incrementing integer ID of the site for use in ML training']

  Indexes {
    (client_uuid, client_site_id) [unique, name: 'idx_client']
  }

  Note: '''
    Each site row specifies a single panel or cluster of panels
    found on a residential house or commercial building. Their
    data is provided by a client.

    *Approximate size: *
    4 clients * ~1000 sites each = ~4000 rows
  '''
}

Table generation {
  generation_uuid uuid [primary key, not null]
  site_uuid uuid [not null, note: 'The site for which this geenration yield belongs to']
  power_kw real [not null, note: 'The actual generated power in kW at this site for this datetime interval']
  datetime_interval_uuid uuid [not null, note: 'The time interval over which this generated power value applies']
  created_utc timestamp [not null]

  Note: '''
  Each yield row specifies a generated power output over a
  given time range for a site.

  *Approximate size: *
  Generation populated every 5 minutes per site * 4000 sites = ~1,125,000 rows per day
  '''
}

Table forecasts {
  forecast_uuid uuid [primary key, not null]
  site_uuid uuid [not null, note: 'The site for which the forecast sequence was generated']
  created_utc timestamp [not null, note: 'The creation time of the forecast sequence']
  forecast_version varchar(32) [not null, note: 'The semantic version of the model used to generate the forecast']

  Note: '''
    Each forecast row refers to a sequence of predicted solar generation values
    over a set of target times for a site.

    *Approximate size: *
    One forecast per site every 5 minutes = ~1,125,000 rows per day
  '''
}

Table forecast_values {
  forecast_value_uuid uuid [primary key, not null]
  datetime_interval_uuid uuid [not null, note: 'The time interval over which this predicted power value applies']
  forecast_generation_kw real [not null, note: 'The predicted power generation of this site for the given time interval']
  created_utc timestamp [not null]
  forecast_uuid uuid [not null, note: 'The forecast sequence this forcast value belongs to']

  Note: '''
    Each forecast_value row is a prediction for the power output
    of a site over a target datetime interval. Many predictions
    are made for each site at each target interval.

    *Approximate size: *
    One forecast value every 5 minutes per site per forecast.
    Each forecast's prediction sequence covers 24 hours of target
    intervals = ~324,000,000 rows per day
  '''
}

Table latest_forecast_values {
  latest_forecast_value_uuid uuid [primary key, not null]
  datetime_interval_uuid uuid [not null, note: 'The time interval over which this predicted power value applies']
  forecast_generation_kw real [not null, note: 'The predicted power generation of this site for the given time interval']
  created_utc timestamp [not null]
  forecast_uuid uuid [not null, note: 'The forecast sequence this forcast value belongs to']
  site_uuid uuid [not null, note: 'The site for which the forecast sequence was generated']
  forecast_version varchar(32) [not null, note: 'The semantic version of the model used to generate the forecast']

  Note: '''
    Each forecast_value row is a prediction for the power output
    of a site over a target datetime interval. Only the most recent
    prediction for each target time interval is stored in this table
    per site.

    *Approximate size: *
    One forecast value every 5 minutes per site per forecast
    sequence = ~1,125,000 rows per day
  '''
}

Table clients {
  client_uuid uuid [primary key, not null]
  client_name varchar(255) [not null]
  created_utc timestamp [not null]

  Note: '''
  Each client row defines a provider of site data

  *Approximate size: *
  One row per client = ~4 rows
  '''
}

Table datetime_intervals {
  datetime_interval_uuid uuid [primary key, not null]
  start_utc timestamp [not null]
  end_utc timestamp [not null]
  created_utc timestamp [not null]

  Indexes {
    start_utc
    end_utc
  }

  Note: '''
  Each datetime_interval row defines a timespan between a start and end time

  *Approximate size: *
  One interval every 5 minutes per day = ~288 rows per day
  '''
}

Table status {
  status_uuid uuid [primary key, not null]
  status varchar(255)
  message varchar(255)
  created_utc timestamp

  Note: '''
  Each status row defines a message reporting on the status of the
  services within the nowcasting domain

  *Approximate size: *
  ~1 row per day
  '''
}

Ref :sites.client_uuid > clients.client_uuid
Ref :generation.datetime_interval_uuid > datetime_intervals.datetime_interval_uuid
Ref :generation.site_uuid > sites.site_uuid
Ref :forecast_values.datetime_interval_uuid > datetime_intervals.datetime_interval_uuid
Ref :forecast_values.forecast_uuid > forecasts.forecast_uuid
Ref :forecasts.site_uuid > sites.site_uuid
Ref :latest_forecast_values.site_uuid > sites.site_uuid
Ref :latest_forecast_values.datetime_interval_uuid > datetime_intervals.datetime_interval_uuid

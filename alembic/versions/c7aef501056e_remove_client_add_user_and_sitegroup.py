"""Remove Client, add User and SiteGroup

Revision ID: c7aef501056e
Revises: 8384de6b7c50
Create Date: 2023-08-11 08:31:28.874183

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c7aef501056e"
down_revision = "8384de6b7c50"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "site_groups",
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("site_group_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("site_group_name", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("site_group_uuid"),
    )
    op.create_index(
        op.f("ix_site_groups_site_group_name"), "site_groups", ["site_group_name"], unique=True
    )
    op.create_table(
        "site_group_sites",
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("site_group_site_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "site_group_uuid",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="The foreign key to the site_groups table",
        ),
        sa.Column(
            "site_uuid",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="The foreign key to the sites table",
        ),
        sa.ForeignKeyConstraint(
            ["site_group_uuid"],
            ["site_groups.site_group_uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["site_uuid"],
            ["sites.site_uuid"],
        ),
        sa.PrimaryKeyConstraint("site_group_site_uuid"),
        sa.UniqueConstraint("site_group_uuid", "site_uuid", name="idx_site_group_site"),
    )
    op.create_table(
        "users",
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("user_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column(
            "site_group_uuid",
            postgresql.UUID(as_uuid=True),
            nullable=False,
            comment="The foreign key to the site_groups table",
        ),
        sa.ForeignKeyConstraint(
            ["site_group_uuid"],
            ["site_groups.site_group_uuid"],
        ),
        sa.PrimaryKeyConstraint("user_uuid"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.drop_constraint("sites_client_uuid_fkey", "sites", type_="foreignkey")
    op.drop_table("clients")
    op.drop_column("inverters", "client_id")
    op.drop_constraint("idx_client", "sites", type_="unique")
    op.drop_column("sites", "client_uuid")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "sites", sa.Column("client_uuid", postgresql.UUID(), autoincrement=False, nullable=False)
    )
    op.create_unique_constraint("idx_client", "sites", ["client_site_id", "client_uuid"])
    op.add_column(
        "inverters",
        sa.Column(
            "client_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The ID of the inverter as given by the providing client",
        ),
    )
    op.create_table(
        "clients",
        sa.Column("created_utc", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("client_uuid", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("client_name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("client_uuid", name="clients_pkey"),
    )
    op.create_foreign_key(
        "sites_client_uuid_fkey", "sites", "clients", ["client_uuid"], ["client_uuid"]
    )
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("site_group_sites")
    op.drop_index(op.f("ix_site_groups_site_group_name"), table_name="site_groups")
    op.drop_table("site_groups")
    # ### end Alembic commands ###
